Major changes from the code provided with the last assignment:

-- Added actions to the grammar for constructing the AST. 

-- Added a node_type field to exp, decl, and stmt structs to hold the
type annotations.

-- Modified AST print/copy/destroy functions to deal with this node_type field.

-- Removed the quotes from string literals in the flex spec and added them in
the print function for string literals.

-- Added functions for constructing global and local environments (in
frontend.c).

-- Added various functions for typechecking and annotating the AST with types
(in typecheck.h, typecheck.c).

-- Removed most "type_*()" functions from type.h/type.c in favor of varities of
the "type_*_new()" form. E.g., removed type_int(), but added type_int_new().
Removed the type_new() function from type.h. This should condense chains like
"type_new(type_int(..." into "type_int_new(...".

-- Added "--std-gnu99" to the gcc flags in order to allow declarations in the
first expression of a for loop.

E.g.: "for(int i = 0; ..." instead of "int i; for(i = 0; ...".

-- Ensured C++ compatibility. Just substitute g++ for gcc in the makefile (and
also consider dropping that "--std=gnu99" flag).

-- Reworked the decl constructors. Added a new decl constructor for each decl
type, similar to the exp and stmt constructors.

-- Replaced all uses of TypedIds with "struct decl", constructed using either
the decl_param_new() or decl_field_new() constructors. I think this simplifies
the structure of the AST a bit, though note that what was previously a TypedId
now has some extra unused fields (like the node_type field -- we aren't
typechecking struct fields or function parameters, though maybe we should have).

-- Refactored env.c, env.h in order to make extensions (e.g., adding info for
activation records to the environment) easier.

-- Added a command line option, "--ast", to cause the executable to print the
annotated AST as we did for the 3rd assignment.

-- Added code to frontend.c for handling multiple file names on the command line
and to handle opening up a "file.s" file for every "file.lig" passed on the
command line.

